from typing import Sequence
import hashlib

import attr
import iolite as io

from vkit.type import PathType
from vkit.text.lexicon.opt import LexiconType


@attr.define
class VLexicon:
    char: str
    aliases: Sequence[str]
    lexicon_type: LexiconType


@attr.define
class VLexiconCollection:
    lexicons: Sequence[VLexicon]

    @staticmethod
    def from_file(path: PathType):
        # path: generated by vkit.text.lexicon.builder:build_lexicons
        lexicons = []

        for line in io.read_json_lines(path):
            tag = line['tag']

            if tag == 'chinese':
                lexicon_type = LexiconType.CHINESE
            elif tag == 'english':
                lexicon_type = LexiconType.ENGLISH
            elif tag == 'digit':
                lexicon_type = LexiconType.DIGIT
            elif tag == 'delimiter':
                lexicon_type = LexiconType.DELIMITER
            else:
                raise NotImplementedError()

            lexicons.append(
                VLexicon(
                    char=line['char'],
                    aliases=line['aliases'],
                    lexicon_type=lexicon_type,
                )
            )

        return VLexiconCollection(lexicons=lexicons)

    def get_hash(self):
        sha256_algo = hashlib.sha256()
        for lexicon in self.lexicons:
            sha256_algo.update(lexicon.char.encode())
            for alias in lexicon.aliases:
                sha256_algo.update(alias.encode())
        return sha256_algo.hexdigest()
